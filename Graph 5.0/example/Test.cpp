#include <iostream>

#include "../include/Graph.h"
#include "../include/AGraph.h"
#include "../include/LGraph.h"
#include "Test.h"

int main()
{
	// LGraph
	Test_BFS();
	std::cout << "====================================================================\n";
	Test_DFS();
	std::cout << "====================================================================\n";
	Test_Topological_Sort();
	std::cout << "====================================================================\n";
	
	Test_MST_Prim();
	std::cout << "====================================================================\n";
	Test_MST_Kruskal();
	std::cout << "====================================================================\n";
	
	Test_Dijkstra();
	std::cout << "====================================================================\n";
	Test_Bellman_Ford();
	std::cout << "====================================================================\n";
	Test_Floyd_Warshall();
	std::cout << "====================================================================\n";
	Test_Ford_Fulkerson();
	std::cout << "====================================================================\n";

	// AGraph
	Test_BFS(false);
	std::cout << "====================================================================\n";
	Test_DFS(false);
	std::cout << "====================================================================\n";
	Test_Topological_Sort(false);
	std::cout << "====================================================================\n";

	Test_MST_Prim(false);
	std::cout << "====================================================================\n";
	Test_MST_Kruskal(false);
	std::cout << "====================================================================\n";

	Test_Dijkstra(false);
	std::cout << "====================================================================\n";
	Test_Bellman_Ford(false);
	std::cout << "====================================================================\n";
	Test_Floyd_Warshall(false);
	std::cout << "====================================================================\n";
	Test_Ford_Fulkerson(false);

	//Graph<char>* g = new AGraph<char>();
	//std::cin >> *g;
	//std::cout << *g << std::endl;
	//g->RemoveNode(0);
	////g->AddNode('-');
	////g->RemoveEdge(0, 1);
	//std::cout << *g << std::endl;

	return 0;
}
